SUBDIRS( qt )

SET( QGOMAINWINDOW_HDRS QGoMainWindow.h
  ${GOFIGURE2_EXTERNAL_SOURCE_DIR}/itkQt/itkQtAdaptor.h)
SET( QGOMAINWINDOW_SRC QGoMainWindow.cxx )

QT4_WRAP_UI( QGOMAINWINDOW_UI_HDRS go.ui )
QT4_WRAP_CPP( QGOMAINWINDOW_MOC_SRC ${QGOMAINWINDOW_HDRS} )
QT4_ADD_RESOURCES( QGOMAINWINDOW_QRC
  ${GOFIGURE2_SOURCE_DIR}/Code/GUI/resources/axes.qrc)


SET_SOURCE_FILES_PROPERTIES( ${QGOMAINWINDOW_SRC} PROPERTIES
  OBJECT_DEPENDS "${QGOMAINWINDOW_UI_HDRS}" )

SET_SOURCE_FILES_PROPERTIES( ${QGOMAINWINDOW_MOC_SRC} PROPERTIES
  OBJECT_DEPENDS "${QGOMAINWINDOW_UI_HDRS}" )

SET( GOFIGURE_APPLICATION_SOURCE_LIST
    gofigure.cxx
    ${GOFIGURE2_EXTERNAL_SOURCE_DIR}/itkQt/itkQtProgressBar.cxx
    ${GOFIGURE2_EXTERNAL_SOURCE_DIR}/vtkLSM/vtkLSMReader.cxx
    ${QGOMAINWINDOW_SRC}
    ${QGOMAINWINDOW_MOC_SRC}
    ${QGOMAINWINDOW_QRC} 
    )

IF( APPLE )

  SET( MACOSX_BUNDLE_ICON_FILE
    ${GOFIGURE2_SOURCE_DIR}/Code/GUI/resources/myapp.icns)	
  ADD_EXECUTABLE( gofigure
    MACOSX_BUNDLE
    ${GOFIGURE_APPLICATION_SOURCE_LIST} )

   ADD_CUSTOM_COMMAND( TARGET gofigure POST_BUILD
     COMMAND mkdir ARGS ${EXECUTABLE_OUTPUT_PATH}/gofigure.app/Contents/Resources
    COMMAND cp ARGS ${MACOSX_BUNDLE_ICON_FILE} ${EXECUTABLE_OUTPUT_PATH}/gofigure.app/Contents/Resources
    COMMAND cp ARGS *.qm ${EXECUTABLE_OUTPUT_PATH}/gofigure.app/Contents/Resources )

ELSE( APPLE )
  #  here will need to differenciate windows to avoid command window
  IF( WIN32 )
    IF( MINGW )
      ADD_CUSTOM_COMMAND( OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/myapp.o
        COMMAND windres.exe -I${CMAKE_CURRENT_SOURCE_DIR}
          -i${GOFIGURE2_SOURCE_DIR}/Code/GUI/resources/myapp.rc
          -o ${CMAKE_CURRENT_BINARY_DIR}/myapp.o )

      SET( ${GOFIGURE_APPLICATION_SOURCE_LIST}
        ${GOFIGURE_APPLICATION_SOURCE_LIST}
        ${CMAKE_CURRENT_BINARY_DIR}/myapp.o )

    ELSE( MINGW )
      SET( ${GOFIGURE_APPLICATION_SOURCE_LIST}
        ${GOFIGURE_APPLICATION_SOURCE_LIST}
        ${GOFIGURE2_SOURCE_DIR}/Code/GUI/resources/myapp.rc )
    ENDIF( MINGW )

  ENDIF( WIN32 )

  ADD_EXECUTABLE( gofigure
    ${GOFIGURE_APPLICATION_SOURCE_LIST} )

ENDIF( APPLE )

TARGET_LINK_LIBRARIES( gofigure
  QMegaVTKAddOn2
  ${QT_LIBRARIES}
  QVTK
  ITKBasicFilters
  ITKNumerics
  vtkImaging
)

INSTALL( TARGETS gofigure
      RUNTIME DESTINATION bin
      BUNDLE  DESTINATION bin
      LIBRARY DESTINATION lib
      ARCHIVE DESTINATION lib/static )
