SUBDIRS( qt )

SET( QGOMAINWINDOW_HDRS QGoMainWindow.h
  ${GOFIGURE2_EXTERNAL_SOURCE_DIR}/itkQt/itkQtAdaptor.h)
SET( QGOMAINWINDOW_SRC QGoMainWindow.cxx )

QT4_WRAP_UI( QGOMAINWINDOW_UI_HDRS go.ui )
QT4_WRAP_CPP( QGOMAINWINDOW_MOC_SRC ${QGOMAINWINDOW_HDRS} )
QT4_WRAP_CPP( MY_MOC_SRC ${GOFIGURE2_SOURCE_DIR}/Code/GUI/qt/QGoCreateDBDialog.h )
QT4_ADD_RESOURCES( QGOMAINWINDOW_QRC
  ${GOFIGURE2_SOURCE_DIR}/Code/GUI/resources/axes.qrc
  )


SET_SOURCE_FILES_PROPERTIES( ${QGOMAINWINDOW_SRC} PROPERTIES
  OBJECT_DEPENDS "${QGOMAINWINDOW_UI_HDRS}" 
  )

SET_SOURCE_FILES_PROPERTIES( ${QGOMAINWINDOW_MOC_SRC} PROPERTIES
  OBJECT_DEPENDS "${QGOMAINWINDOW_UI_HDRS}" 
  )

SET( GOFIGURE_APPLICATION_SOURCE_LIST
    gofigure.cxx
    ${GOFIGURE2_EXTERNAL_SOURCE_DIR}/itkQt/itkQtProgressBar.cxx
    ${GOFIGURE2_EXTERNAL_SOURCE_DIR}/vtkLSM/vtkLSMReader.cxx
    ${GOFIGURE2_SOURCE_DIR}/Code/GUI/qt/QGoCreateDBDialog.cxx
    ${GOFIGURE2_SOURCE_DIR}/Code/IO/CreateDataBaseHelper.cxx
    ${QGOMAINWINDOW_SRC}
    ${QGOMAINWINDOW_MOC_SRC}
    ${QGOMAINWINDOW_QRC} 
    ${MY_MOC_SRC}
    )

IF( APPLE )
  IF( BUILD_PACKAGE ) 
    SET( MACOSX_BUNDLE_ICON_FILE
      ${GOFIGURE2_SOURCE_DIR}/Code/GUI/resources/myapp.icns
      )
    SET( MACOSX_BUNDLE_SHORT_VERSION_STRING 
      ${GOFIGURE2_VERSION} 
      )
    SET( MACOSX_BUNDLE_VERSION 
      ${GOFIGURE2_VERSION}
      )
    SET( MACOSX_BUNDLE_LONG_VERSION_STRING 
      Version ${GOFIGURE2_VERSION} 
      )
  ENDIF( BUILD_PACKAGE )
 	
  ADD_EXECUTABLE( gofigure
    MACOSX_BUNDLE
    ${GOFIGURE_APPLICATION_SOURCE_LIST} 
    )

  IF( BUILD_PACKAGE )
    IF( EXISTS ${EXECUTABLE_OUTPUT_PATH}/gofigure.app/Contents/Resources )
      ADD_CUSTOM_COMMAND( TARGET gofigure POST_BUILD
      COMMAND cp ARGS ${MACOSX_BUNDLE_ICON_FILE} ${EXECUTABLE_OUTPUT_PATH}/gofigure.app/Contents/Resources
      COMMAND cp ARGS *.qm ${EXECUTABLE_OUTPUT_PATH}/gofigure.app/Contents/Resources )
    ELSE( EXISTS ${EXECUTABLE_OUTPUT_PATH}/gofigure.app/Contents/Resources ) 
      ADD_CUSTOM_COMMAND( TARGET gofigure POST_BUILD
      COMMAND mkdir ARGS ${EXECUTABLE_OUTPUT_PATH}/gofigure.app/Contents/Resources
      COMMAND cp ARGS ${MACOSX_BUNDLE_ICON_FILE} ${EXECUTABLE_OUTPUT_PATH}/gofigure.app/Contents/Resources
      COMMAND cp ARGS *.qm ${EXECUTABLE_OUTPUT_PATH}/gofigure.app/Contents/Resources )
    ENDIF( EXISTS ${EXECUTABLE_OUTPUT_PATH}/gofigure.app/Contents/Resources )
  ENDIF( BUILD_PACKAGE ) 

ELSE( APPLE )

  IF( WIN32 )
  
    IF( MINGW )
      ADD_CUSTOM_COMMAND( OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/myapp.o
        COMMAND windres.exe -I${CMAKE_CURRENT_SOURCE_DIR}
          -i ${GOFIGURE2_SOURCE_DIR}/Code/GUI/resources/myapp.rc
          -o ${CMAKE_CURRENT_BINARY_DIR}/myapp.o 
          )
      SET( ${GOFIGURE_APPLICATION_SOURCE_LIST}
        ${GOFIGURE_APPLICATION_SOURCE_LIST}
        ${CMAKE_CURRENT_BINARY_DIR}/myapp.o 
        )
      ADD_EXECUTABLE( gofigure
        ${GOFIGURE_APPLICATION_SOURCE_LIST} 
        )

    ELSE( MINGW ) # borland or MSVC
      ADD_EXECUTABLE( gofigure
        ${GOFIGURE_APPLICATION_SOURCE_LIST}
        #${GOFIGURE2_SOURCE_DIR}/Code/GUI/resources/myapp.rc 
        )
        
    ENDIF( MINGW )
    
  ELSE( WIN32 ) # linux / UNIX / solaris, ....
    ADD_EXECUTABLE( gofigure
      ${GOFIGURE_APPLICATION_SOURCE_LIST} 
      )
      
  ENDIF( WIN32 )

ENDIF( APPLE )

TARGET_LINK_LIBRARIES( gofigure
  QMegaVTKAddOn2
  ${QT_LIBRARIES}
  QVTK
  ITKBasicFilters
  ITKNumerics
  vtkImaging
  )

INSTALL( TARGETS gofigure
      RUNTIME DESTINATION bin
      BUNDLE  DESTINATION bin
      LIBRARY DESTINATION lib
      ARCHIVE DESTINATION lib/static 
      )
